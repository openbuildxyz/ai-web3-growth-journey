"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/layout",{

/***/ "(app-pages-browser)/./src/app/globals.css":
/*!*****************************!*\
  !*** ./src/app/globals.css ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (\"c3e84471aa2d\");\nif (true) { module.hot.accept() }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvZ2xvYmFscy5jc3MiLCJtYXBwaW5ncyI6IjtBQUFBLCtEQUFlLGNBQWM7QUFDN0IsSUFBSSxJQUFVLElBQUksaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvZ2xvYmFscy5jc3M/NjdjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBcImMzZTg0NDcxYWEyZFwiXG5pZiAobW9kdWxlLmhvdCkgeyBtb2R1bGUuaG90LmFjY2VwdCgpIH1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/globals.css\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useWallet.tsx":
/*!*********************************!*\
  !*** ./src/hooks/useWallet.tsx ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WalletProvider: function() { return /* binding */ WalletProvider; },\n/* harmony export */   useWallet: function() { return /* binding */ useWallet; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/../../node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/../../node_modules/.pnpm/next@14.2.32_react-dom@18.3.1_react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ useWallet,WalletProvider auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\nconst WalletContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction useWallet() {\n    _s();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(WalletContext);\n    if (context === undefined) {\n        throw new Error(\"useWallet must be used within a WalletProvider\");\n    }\n    return context;\n}\n_s(useWallet, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nfunction WalletProvider(param) {\n    let { children } = param;\n    _s1();\n    const [isConnected, setIsConnected] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [address, setAddress] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [balance, setBalance] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [network, setNetwork] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isConnecting, setIsConnecting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null); // Check if wallet is already connected on page load\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkWalletConnection();\n    }, []);\n    const checkWalletConnection = async ()=>{\n        try {\n            if ( true && window.ethereum) {\n                const accounts = await window.ethereum.request({\n                    method: \"eth_accounts\"\n                });\n                if (accounts.length > 0) {\n                    setAddress(accounts[0]);\n                    setIsConnected(true);\n                    await updateBalance(accounts[0]);\n                }\n            }\n        } catch (err) {\n            console.error(\"Failed to check wallet connection:\", err);\n        }\n    };\n    const updateBalance = async (walletAddress)=>{\n        try {\n            if (window.ethereum) {\n                // Get current network\n                const chainId = await window.ethereum.request({\n                    method: \"eth_chainId\"\n                });\n                let networkName = \"Unknown\";\n                let currencySymbol = \"ETH\";\n                switch(chainId){\n                    case \"0x1\":\n                        networkName = \"Ethereum Mainnet\";\n                        currencySymbol = \"ETH\";\n                        break;\n                    case \"0xaa36a7\":\n                        networkName = \"Sepolia Testnet\";\n                        currencySymbol = \"SEP\";\n                        break;\n                    case \"0x89\":\n                        networkName = \"Polygon\";\n                        currencySymbol = \"MATIC\";\n                        break;\n                    default:\n                        networkName = \"Network \".concat(chainId);\n                }\n                setNetwork(networkName);\n                const balance = await window.ethereum.request({\n                    method: \"eth_getBalance\",\n                    params: [\n                        walletAddress,\n                        \"latest\"\n                    ]\n                });\n                // Convert from wei to ETH/SEP\n                const ethBalance = parseInt(balance, 16) / Math.pow(10, 18);\n                setBalance(\"\".concat(ethBalance.toFixed(4), \" \").concat(currencySymbol));\n            }\n        } catch (err) {\n            console.error(\"Failed to get balance:\", err);\n        }\n    };\n    const connectWallet = async ()=>{\n        setIsConnecting(true);\n        setError(null);\n        try {\n            if (!window.ethereum) {\n                throw new Error(\"MetaMask is not installed. Please install MetaMask to continue.\");\n            }\n            // Request wallet connection\n            const accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (accounts.length > 0) {\n                setAddress(accounts[0]);\n                setIsConnected(true);\n                await updateBalance(accounts[0]);\n                // Switch to Sepolia testnet for ModelForge\n                try {\n                    await window.ethereum.request({\n                        method: \"wallet_switchEthereumChain\",\n                        params: [\n                            {\n                                chainId: \"0xaa36a7\"\n                            }\n                        ]\n                    });\n                } catch (switchError) {\n                    // If Sepolia chain doesn't exist, add it\n                    if (switchError.code === 4902) {\n                        try {\n                            await window.ethereum.request({\n                                method: \"wallet_addEthereumChain\",\n                                params: [\n                                    {\n                                        chainId: \"0xaa36a7\",\n                                        chainName: \"Sepolia Test Network\",\n                                        nativeCurrency: {\n                                            name: \"SepoliaETH\",\n                                            symbol: \"SEP\",\n                                            decimals: 18\n                                        },\n                                        rpcUrls: [\n                                            \"https://rpc.sepolia.org\"\n                                        ],\n                                        blockExplorerUrls: [\n                                            \"https://sepolia.etherscan.io\"\n                                        ]\n                                    }\n                                ]\n                            });\n                        } catch (addError) {\n                            console.error(\"Failed to add Sepolia network:\", addError);\n                        }\n                    }\n                }\n            }\n        } catch (err) {\n            setError(err.message || \"Failed to connect wallet\");\n            console.error(\"Wallet connection failed:\", err);\n        } finally{\n            setIsConnecting(false);\n        }\n    };\n    const disconnectWallet = ()=>{\n        setIsConnected(false);\n        setAddress(null);\n        setBalance(null);\n        setError(null);\n    };\n    // Listen for account changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (window.ethereum) {\n            const handleAccountsChanged = (accounts)=>{\n                if (accounts.length === 0) {\n                    disconnectWallet();\n                } else if (accounts[0]) {\n                    setAddress(accounts[0]);\n                    updateBalance(accounts[0]);\n                }\n            };\n            const handleChainChanged = ()=>{\n                // Reload the page when chain changes\n                window.location.reload();\n            };\n            window.ethereum.on(\"accountsChanged\", handleAccountsChanged);\n            window.ethereum.on(\"chainChanged\", handleChainChanged);\n            return ()=>{\n                if (window.ethereum) {\n                    window.ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\n                    window.ethereum.removeListener(\"chainChanged\", handleChainChanged);\n                }\n            };\n        }\n        return ()=>{}; // Always return a function\n    }, []);\n    const value = {\n        isConnected,\n        address,\n        balance,\n        network,\n        isConnecting,\n        connectWallet,\n        disconnectWallet,\n        error\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(WalletContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"/home/shinichi/Coding/ModelForge/apps/web/src/hooks/useWallet.tsx\",\n        lineNumber: 194,\n        columnNumber: 15\n    }, this);\n}\n_s1(WalletProvider, \"+9R6heXdoiMYbR2Khqic69dke10=\");\n_c = WalletProvider;\nvar _c;\n$RefreshReg$(_c, \"WalletProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useWallet.tsx\n"));

/***/ })

});