/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ForgeFaucet,
  ForgeFaucetInterface,
} from "../../contracts/ForgeFaucet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_forgeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FaucetPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "FaucetUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TokensClaimed",
    type: "event",
  },
  {
    inputs: [],
    name: "COOLDOWN_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FAUCET_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "canClaim",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "forgeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFaucetStats",
    outputs: [
      {
        internalType: "uint256",
        name: "faucetBalance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalDispensedAmount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isPaused",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStats",
    outputs: [
      {
        internalType: "uint256",
        name: "userTotalClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "userLastClaimTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "userCanClaimNow",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "timeUntilNextClaim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDispensed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161106838038061106883398101604081905261002f91610109565b610038336100b9565b600180556001600160a01b0381166100a85760405162461bcd60e51b815260206004820152602960248201527f466f7267654661756365743a20746f6b656e20616464726573732063616e6e6f60448201526874206265207a65726f60b81b606482015260840160405180910390fd5b6001600160a01b0316608052610139565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561011b57600080fd5b81516001600160a01b038116811461013257600080fd5b9392505050565b608051610eff6101696000396000818161022f0152818161047e015281816105d001526108be0152610eff6000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80638da5cb5b116100a2578063bb9ed1b111610071578063bb9ed1b11461022a578063bf3506c114610251578063c13463c914610264578063ef5d9ae81461026c578063f2fde38b1461028c57600080fd5b80638da5cb5b146101bf57806392d82dbe146101e457806395ccea67146101f7578063b77cf9c61461020a57600080fd5b80635c975abb116100e95780635c975abb146101795780636e99d52f14610196578063715018a61461019f57806376697640146101a75780638456cb59146101b757600080fd5b80633f4ba83a1461011b5780633fefbb1b1461012557806348c54b9d146101415780634e43603a14610149575b600080fd5b61012361029f565b005b61012e60045481565b6040519081526020015b60405180910390f35b6101236102dc565b61015c610157366004610d93565b610659565b604080519384526020840192909252151590820152606001610138565b6005546101869060ff1681565b6040519015158152602001610138565b61012e610e1081565b610123610690565b61012e68056bc75e2d6310000081565b6101236106a2565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610138565b61012e6101f2366004610d93565b6106e2565b610123610205366004610db5565b610732565b61012e610218366004610d93565b60026020526000908152604090205481565b6101cc7f000000000000000000000000000000000000000000000000000000000000000081565b61018661025f366004610d93565b61086b565b61015c61089a565b61012e61027a366004610d93565b60036020526000908152604090205481565b61012361029a366004610d93565b61093f565b6102a76109b8565b6005805460ff191690556040517fcc260a1b61695c62ce3b9a5089ceca490c461586cc6e2d022b0f7320775b25cc90600090a1565b6102e4610a12565b60055460ff161561033c5760405162461bcd60e51b815260206004820152601d60248201527f466f7267654661756365743a206661756365742069732070617573656400000060448201526064015b60405180910390fd5b338061039e5760405162461bcd60e51b815260206004820152602b60248201527f466f7267654661756365743a20636c61696d65722063616e6e6f74206265207a60448201526a65726f206164647265737360a81b6064820152608401610333565b803b156104005760405162461bcd60e51b815260206004820152602a60248201527f466f7267654661756365743a20636f6e7472616374732063616e6e6f7420636c60448201526961696d20746f6b656e7360b01b6064820152608401610333565b6104098161086b565b6104665760405162461bcd60e51b815260206004820152602860248201527f466f7267654661756365743a20636f6f6c646f776e20706572696f64206e6f7460448201526708195b185c1cd95960c21b6064820152608401610333565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156104cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f19190610ddf565b905068056bc75e2d6310000081101561055d5760405162461bcd60e51b815260206004820152602860248201527f466f7267654661756365743a20696e73756666696369656e74206661756365746044820152672062616c616e636560c01b6064820152608401610333565b6001600160a01b038216600090815260026020908152604080832042905560039091528120805468056bc75e2d63100000929061059b908490610e0e565b9250508190555068056bc75e2d63100000600460008282546105bd9190610e0e565b9091555061060090506001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168368056bc75e2d63100000610a6b565b816001600160a01b03167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43068056bc75e2d6310000060405161064491815260200190565b60405180910390a2505061065760018055565b565b6001600160a01b038116600090815260036020908152604080832054600290925282205490916106888461086b565b929491935050565b6106986109b8565b6106576000610ac2565b6106aa6109b8565b6005805460ff191660011790556040517fdbaf6b0e91adfd1eaf4f0e433e896e22317e8f6dd0feaa811f36d117eddbe49190600090a1565b60006106ed8261086b565b156106fa57506000919050565b6001600160a01b038216600090815260026020526040902054429061072290610e1090610e0e565b61072c9190610e21565b92915050565b61073a6109b8565b6001600160a01b0382166107a25760405162461bcd60e51b815260206004820152602960248201527f466f7267654661756365743a20746f6b656e20616464726573732063616e6e6f60448201526874206265207a65726f60b81b6064820152608401610333565b600081116107fe5760405162461bcd60e51b8152602060048201526024808201527f466f7267654661756365743a20616d6f756e74206d75737420626520706f73696044820152637469766560e01b6064820152608401610333565b6108246108136000546001600160a01b031690565b6001600160a01b0384169083610a6b565b816001600160a01b03167f5fafa99d0643513820be26656b45130b01e1c03062e1266bf36f88cbd3bd96958260405161085f91815260200190565b60405180910390a25050565b6001600160a01b03811660009081526002602052604081205461089190610e1090610e0e565b42101592915050565b6040516370a0823160e01b8152306004820152600090819081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190610ddf565b600454600554919590945060ff90911692509050565b6109476109b8565b6001600160a01b0381166109ac5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610333565b6109b581610ac2565b50565b6000546001600160a01b031633146106575760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610333565b600260015403610a645760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610333565b6002600155565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610abd908490610b12565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b67826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610be79092919063ffffffff16565b9050805160001480610b88575080806020019051810190610b889190610e34565b610abd5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610333565b6060610bf68484600085610bfe565b949350505050565b606082471015610c5f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610333565b600080866001600160a01b03168587604051610c7b9190610e7a565b60006040518083038185875af1925050503d8060008114610cb8576040519150601f19603f3d011682016040523d82523d6000602084013e610cbd565b606091505b5091509150610cce87838387610cd9565b979650505050505050565b60608315610d48578251600003610d41576001600160a01b0385163b610d415760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610333565b5081610bf6565b610bf68383815115610d5d5781518083602001fd5b8060405162461bcd60e51b81526004016103339190610e96565b80356001600160a01b0381168114610d8e57600080fd5b919050565b600060208284031215610da557600080fd5b610dae82610d77565b9392505050565b60008060408385031215610dc857600080fd5b610dd183610d77565b946020939093013593505050565b600060208284031215610df157600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b8082018082111561072c5761072c610df8565b8181038181111561072c5761072c610df8565b600060208284031215610e4657600080fd5b81518015158114610dae57600080fd5b60005b83811015610e71578181015183820152602001610e59565b50506000910152565b60008251610e8c818460208701610e56565b9190910192915050565b6020815260008251806020840152610eb5816040850160208701610e56565b601f01601f1916919091016040019291505056fea26469706673582212206dceeca017510b85164361194b49040f0ab1f0d0448b81320e389eb1c00d817e64736f6c63430008140033";

type ForgeFaucetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForgeFaucetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForgeFaucet__factory extends ContractFactory {
  constructor(...args: ForgeFaucetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _forgeToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_forgeToken, overrides || {});
  }
  override deploy(
    _forgeToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_forgeToken, overrides || {}) as Promise<
      ForgeFaucet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ForgeFaucet__factory {
    return super.connect(runner) as ForgeFaucet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForgeFaucetInterface {
    return new Interface(_abi) as ForgeFaucetInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ForgeFaucet {
    return new Contract(address, _abi, runner) as unknown as ForgeFaucet;
  }
}
