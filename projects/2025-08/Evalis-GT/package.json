{
  "name": "evalis-workspace",
  "private": true,
  "version": "1.0.0",
  "workspaces": [
    "frontend",
    "backend",
    "web3"
  ],
  "scripts": {
    "dev": "concurrently \"npm run backend:dev\" \"npm run frontend:dev\"",
    "frontend:dev": "cd frontend && npm run dev",
    "frontend:build": "cd frontend && npm run build",
    "frontend:preview": "cd frontend && npm run preview",
    "backend:dev": "cd backend && npm run dev",
    "backend:start": "cd backend && npm run start",
    "backend:prod": "cd backend && npm run start",
    "web3:compile": "cd web3 && npm run build",
    "web3:test": "cd web3 && npm run test",
    "web3:deploy": "cd web3 && npm run deploy",
    "install:all": "npm install && npm run install:frontend && npm run install:backend && npm run install:web3",
    "install:frontend": "cd frontend && npm install",
    "install:backend": "cd backend && npm install",
    "install:web3": "cd web3 && npm install",
    "build:all": "npm run frontend:build && npm run web3:compile",
    "vercel-build": "npm run frontend:build",
    "data:import": "cd backend && node seeder",
    "data:destroy": "cd backend && node seeder -d",
    "test:db": "cd backend && node checkProductionEnvironment.js",
    "setup:neondb": "cd backend && node setupNeonDB.js",
    "migrate:mongodb": "cd backend && node migrateMongoDB.js",
    "export:neondb": "cd backend && node scripts/exportNeonDB.js",
    "import:awsrds": "cd backend && node scripts/importToAWSRDS.js",
    "verify:awsrds": "cd backend && node scripts/verifyAWSRDS.js",
    "migrate:awsrds": "cd backend && node scripts/migrateToAWSRDS.js",
    "migrate:clerk": "cd backend && node scripts/migrateUsersToClerk.js",
    "setup:awsrds": "cd backend && node scripts/setupAWSRDS.js",
    "health:check": "cd backend && node scripts/healthCheck.js",
    "create:admin": "cd backend && node createAdmin.js",
    "reset:admin": "cd backend && node createAdmin.js --reset",
    "deploy": "./scripts/deployment/deploy.sh",
    "create:testusers": "echo 'Test users script removed during cleanup. Use admin panel or createAdmin.js instead.'",
    "seed:batches": "cd backend && node seed.js",
    "docker:build": "docker build -t evalis-gt .",
    "docker:run": "docker run -p 3000:3000 evalis-gt",
    "docker:compose": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "logs": "docker-compose logs -f app",
    "health": "curl -f http://localhost:3000/api/health || exit 1",
    "pm2:start": "pm2 start ecosystem.config.json --env production",
    "pm2:stop": "pm2 stop evalis-gt",
    "pm2:restart": "pm2 restart evalis-gt",
    "pm2:reload": "pm2 reload evalis-gt",
    "pm2:delete": "pm2 delete evalis-gt",
    "pm2:logs": "pm2 logs evalis-gt",
    "pm2:monit": "pm2 monit",
    "production:install": "npm run install:all",
    "production:start": "npm run pm2:start",
    "production:stop": "npm run pm2:stop"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "pm2": "^6.0.8"
  },
  "description": "Evalis - University Grading and Submission Portal",
  "keywords": [
    "education",
    "university",
    "grading",
    "submissions",
    "mongodb",
    "react",
    "node"
  ],
  "license": "ISC"
}
